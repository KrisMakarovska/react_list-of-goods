{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","console","log","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reset","reverse","this","updatedGoods","goods","copyOfGoods","sort","g1","g2","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKA4BKA,E,0GAvBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAaGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAOLE,QAAQC,IAAIH,GA6BL,IAAMI,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUP,EAASQ,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUP,EAASW,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUP,EAASa,UAXvC,EAcEC,MAAQ,WACN,EAAKJ,SAAS,CACZH,SAAUP,EAASQ,KACnBF,YAAY,KAjBlB,EAqBES,QAAU,WACR,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAvBzB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAzDH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAW,YAAOD,GAgBxB,OAbAhB,QAAQC,IAAII,EAAUD,GAEtBa,EAAYC,MAAK,SAACC,EAAIC,GACpB,OAAQf,GACN,KAAKP,EAASW,SACZ,OAAOU,EAAGE,cAAcD,GAC1B,KAAKtB,EAASa,OACZ,OAAOQ,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITlB,EACKa,EAAYJ,UAGdI,EAiCgBM,CAAkBxB,EAAiBe,KAAKX,OAE7D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAY5B,EAASW,WAAaJ,IAEtCsB,QAASb,KAAKP,eANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYrB,IAAaP,EAASa,SAEtCgB,QAASb,KAAKJ,aANhB,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAftB,IAEhBuB,QAASb,KAAKD,QANhB,sBAWEf,EAASQ,OAASD,IAA2B,IAAfD,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKF,MAHhB,sBAWJ,6BACE,6BACGG,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBArFrB,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ff9f736.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// eslint-disable-next-line no-console\nconsole.log(SortType);\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const copyOfGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  copyOfGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return copyOfGoods.reverse();\n  }\n\n  return copyOfGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const updatedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': SortType.ALPHABET !== sortType },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': isReversed === false },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(SortType.NONE !== sortType || isReversed !== false) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {updatedGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}